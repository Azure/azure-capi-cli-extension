on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  pull_request:
    branches:
      - main

env:
  IMAGE: Azure/azure-capi-cli-extension

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write  # for actions/create-release to create a release
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

    - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate

        python -m pip install -U pip
        python -m pip install -r requirements.txt
        azdev setup --repo . --ext capi

    - name: Lint code
      run: |
        source env/bin/activate

        azdev linter
        azdev style

    - name: Run unit tests
      run: |
        source env/bin/activate

        azdev test --pytest-args --cov=src

    - name: Build extension
      run: |
        source env/bin/activate

        azdev extension build capi

        WHEEL=$(find ./dist -name "*.whl" -printf "%f")
        echo "WHEEL=$WHEEL" >> $GITHUB_ENV

    - name: Validate extension can be installed
      run: |
        az extension add --allow-preview --source dist/${{ env.WHEEL }} -y
        az extension list
        az capi -h

    - uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
      with:
        name: dist
        path: dist

    - id: validate_release
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        VERSION=$(echo $WHEEL | grep -Po '\w+-\K(\d+\.*)+')
        if [ "refs/tags/v$VERSION" != "$GITHUB_REF" ]; then
          echo "The source control tag does not match the version specified for the wheel. Did you remember to update setup.py?"
          echo "Tag: $GITHUB_REF"
          echo "Wheel: $VERSION"
          exit 1
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - id: create_release
      uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
          ```bash
          az extension add --allow-preview --source https://github.com/Azure/azure-capi-cli-extension/releases/download/v${{ env.VERSION }}/${{ env.WHEEL }}
          ```
        draft: true
        prerelease: true

    - uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{ env.WHEEL }}
        asset_name: ${{ env.WHEEL }}
        asset_content_type: application/zip
